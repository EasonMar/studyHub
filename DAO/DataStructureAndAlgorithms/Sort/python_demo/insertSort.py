# 插入排序
# - 将数组中的数据分为两个区间，已排序区间和未排序区间
# - 初始已排序区间只有一个元素，就是数组的第一个元素
# - 插入算法的核心思想是取未排序区间中的元素，在已排序区间中找到合适的插入位置将其插入，并保证已排序区间数据一直有序
# - 重复这个过程，直到未排序区间中元素为空，算法结束

def insertion_sort(arr):

    # 默认第一个元素为已排序区间, 遍历未排序区间元素, 插入到已排序区间中
    for i in range(1, len(arr)):

        tmp = arr[i] # 存放当前未排序元素
        
        j = i - 1 # 已排序区间元素指针, 指向已排序区间内最后一个元素

        # 反向遍历已排序区间的元素 arr[j], 与 tmp 对比
        while j >= 0:
            
            # 如果已排序区间元素大于当前元素, 则给 arr[j] 做一次右移操作(给当前元素插入到已排序区间挪位置)
            if arr[j] > tmp:
                arr[j + 1] = arr[j]
                j -= 1 # 指针往左移动
            else:
                break
        
        # 此时j已经指向了比当前元素小的位置、或者已经指向了 -1. 所以在插入的时候, 要把指针往右移一位
        arr[j+1] = tmp
    
    print(arr)

a = [2, 6, 14, 1, 4, 5, 7, 8, 9, 0, 10, 13]

insertion_sort(a)


# 插入排序是一种原地、稳定的排序算法